{"version":3,"sources":["context/gitContext.js","context/gitActionTypes.js","context/gitReducer.js","context/gitState.js","components/Navbar.js","pages/NotFound.js","components/Users/UserItem.js","assets/images/spinner.gif","components/Spinner.js","components/Users/UserList.js","components/UserSearch.js","pages/Home.js","pages/User.js","App.js","reportWebVitals.js","index.js"],"names":["gitContext","createContext","SEARCH_USERS","GET_USER","SET_USER","CLEAR_USERS","GET_REPOSITORIES","SET_LOADING","gitReducer","state","action","type","users","payload","loading","user","repos","gitAPI","axios","create","baseURL","process","gitToken","defaults","headers","common","Authorization","GitState","props","useReducer","repositories","dispatch","searchUsers","text","a","trim","userClear","setLoading","get","res","data","items","Promise","all","map","item","login","repoCount","length","getUser","userName","getRepositories","Provider","value","setUser","obj","children","Navbar","className","to","NotFound","userNameStyle","paddingTop","paddingLeft","userRepoCountStyle","marginLeft","UserItem","avatar_url","src","alt","style","Spinner","spinner","userStyle","display","UserList","gc","useContext","id","UserSearch","useState","searchKey","setSearchKey","timer","setTimer","name","placeholder","onChange","e","key","target","clearTimeout","setTimeout","onClick","Home","User","match","context","displayRepos","setDisplayRepos","useEffect","params","location","bio","followers","following","email","created_at","width","Date","toLocaleDateString","filter","toLowerCase","includes","repo","rel","href","html_url","forks","stargazers_count","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAIeA,EAFIC,0B,OCFNC,EAAe,eACfC,EAAW,WACXC,EAAW,WACXC,EAAc,cACdC,EAAmB,mBACnBC,EAAc,cCsCZC,EAzCI,SAACC,EAAOC,GACzB,OAAQA,EAAOC,MACb,KAAKT,EACH,OAAO,2BACFO,GADL,IAEEG,MAAOF,EAAOG,QACdC,SAAS,IAEb,KAAKP,EACH,OAAO,2BACFE,GADL,IAEEK,SAAS,IAEb,KAAKT,EACH,OAAO,2BACFI,GADL,IAEEK,SAAS,EACTF,MAAO,KAEX,KAAKT,EACH,OAAO,2BACFM,GADL,IAEEM,KAAML,EAAOG,QACbC,SAAS,IAEb,KAAKV,EACH,OAAO,2BACFK,GADL,IAEEM,KAAML,EAAOG,UAEjB,KAAKP,EACH,OAAO,2BACFG,GADL,IAEEO,MAAON,EAAOG,QACdC,SAAS,IAEb,QACE,OAAOL,I,OCjCPQ,EAASC,IAAMC,OAAO,CAC1BC,QAASC,2BAELC,EAAWD,2CAEfJ,EAAOM,SAASC,QAAQC,OAAOC,cAA/B,gBAAwDJ,GAG1D,IA6FeK,EA7FE,SAAAC,GACf,IADwB,EAQEC,qBAAWrB,EAPhB,CACnBI,MAAO,GACPG,KAAM,GACNe,aAAc,GACdhB,SAAS,IALa,mBAQjBL,EARiB,KAQVsB,EARU,KAWlBC,EAAW,uCAAG,WAAMC,GAAN,eAAAC,EAAA,yDACbD,GAAwB,KAAhBA,EAAKE,OADA,gBAEhBC,IAFgB,8BAKhBC,IALgB,SAMEpB,EAAOqB,IAAP,0BACGL,IAPL,YAMVM,EANU,QASRC,OAAQD,EAAIC,KAAKC,MATT,kCAURC,QAAQC,IACZJ,EAAIC,KAAKC,MAAMG,IAAf,uCAAmB,WAAOC,GAAP,iBAAAX,EAAA,sEACMjB,EAAOqB,IAAP,iBACXO,EAAKC,MADM,WADN,uBACTN,EADS,EACTA,KAGRK,EAAKE,UAAYP,EAAKQ,OAJL,kBAKVH,GALU,2CAAnB,wDAXY,QAmBdd,EAAS,CACPpB,KAAMT,EACNW,QAAS0B,EAAIC,KAAKC,QArBN,4CAAH,sDA6BXQ,EAAO,uCAAG,WAAMC,GAAN,eAAAhB,EAAA,6DACdG,IADc,SAEIpB,EAAOqB,IAAP,iBACNY,IAHE,OAERX,EAFQ,OAKdR,EAAS,CAAEpB,KAAMR,EAAUU,QAAS0B,EAAIC,OAL1B,2CAAH,sDAcPW,EAAe,uCAAG,WAAMD,GAAN,eAAAhB,EAAA,6DACtBG,IADsB,SAEJpB,EAAOqB,IAAP,iBACNY,EADM,4BAFI,OAEhBX,EAFgB,OAMtBR,EAAS,CACPpB,KAAML,EACNO,QAAS0B,EAAIC,OARO,2CAAH,sDAcfJ,EAAY,kBAAML,EAAS,CAAEpB,KAAMN,KAGnCgC,EAAa,kBAAMN,EAAS,CAAEpB,KAAMJ,KAE1C,OAAO,cAAC,EAAW6C,SAAZ,CACLC,MACE,CACEzC,MAAOH,EAAMG,MACbG,KAAMN,EAAMM,KACZe,aAAcrB,EAAMO,MACpBF,QAASL,EAAMK,QACfkB,cACAI,YACAa,UACAK,QAlCU,SAAAC,GACdxB,EAAS,CAAEpB,KAAMP,EAAUS,QAAS0C,KAkChCJ,mBAXC,SAeJvB,EAAM4B,YCzFIC,EAVA,WACb,OACE,qBAAKC,UAAU,oBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,sDCIOC,EATE,WACf,OACE,eAAC,WAAD,WACE,+CACA,mBAAGF,UAAU,OAAb,iECgBAG,EAAgB,CACpBC,WAAY,MACZC,YAAa,QAETC,EAAqB,CACzBF,WAAY,MACZC,YAAa,OACbE,WAAY,QAECC,EA3BE,SAAC,GAAgD,IAAD,IAA7CnD,KAAQ+B,EAAqC,EAArCA,MAAOqB,EAA8B,EAA9BA,WAAYpB,EAAkB,EAAlBA,UAC7C,OACE,eAAC,IAAD,CAAMY,GAAE,eAAUb,GAASY,UAAU,wBAArC,UACE,qBACEU,IAAKD,EACLE,IAAI,cACJX,UAAU,cAEZ,oBAAIY,MAAOT,EAAX,SAA2Bf,IAC3B,uBAAMwB,MAAON,EAAb,mBAAwCjB,SCb/B,MAA0B,oCCY1BwB,EATC,kBACZ,cAAC,WAAD,UACI,qBACIH,IAAKI,EACLH,IAAI,aACJX,UAAU,eCmBhBe,EAAY,CAChBC,QAAS,QAGIC,EA1BE,WAEf,IAAMC,EAAKC,qBAAW7E,GAEdc,EAAmB8D,EAAnB9D,QAASF,EAAUgE,EAAVhE,MAEjB,OAAIE,EACK,cAAC,EAAD,IAIL,qBAAKwD,MAAOG,EAAZ,SAEI7D,EAAMgC,KAAI,SAAA7B,GAAI,OACZ,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAK+D,UCkBjBC,EAlCI,WAAO,IAAD,EAEWC,mBAAS,IAFpB,mBAEhBC,EAFgB,KAELC,EAFK,OAGGF,mBAAS,MAHZ,mBAGhBG,EAHgB,KAGTC,EAHS,KAKjBR,EAAKC,qBAAW7E,GAqBtB,OACE,gCACE,uBAAOW,KAAK,OAAO0E,KAAK,OAAOC,YAAY,mBAAmBjC,MAAO4B,EAAWM,SArBnE,SAAAC,GACf,IAAMC,EAAMD,EAAEE,OAAOrC,MACrB6B,EAAaO,GACTN,IACFQ,aAAaR,GACbC,EAAS,OAEXA,EACEQ,YAAW,WACThB,EAAG5C,YAAYyD,KACd,SAYFb,EAAGhE,MAAMoC,OAAS,GAAK,wBAAQU,UAAU,6BAA6BmC,QAR1D,WACfX,EAAa,IACbN,EAAGxC,aAMuB,uBCtBf0D,EANF,kBACX,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QC2EWC,EA9EF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACRC,EAAUpB,qBAAW7E,GADD,EAEcgF,mBAAS,IAFvB,mBAEnBkB,EAFmB,KAELC,EAFK,KAI1BC,qBAAU,WACRH,EAAQhD,QAAQ+C,EAAMK,OAAOvD,OAC7BmD,EAAQ9C,gBAAgB6C,EAAMK,OAAOvD,SACpC,IAEHsD,qBAAU,WACRD,EAAgBF,EAAQnE,gBACvB,CAACmE,EAAQnE,eAXc,MAuBtBmE,EAAQlF,KATVsE,EAdwB,EAcxBA,KACAlB,EAfwB,EAexBA,WACAmC,EAhBwB,EAgBxBA,SACAC,EAjBwB,EAiBxBA,IACAC,EAlBwB,EAkBxBA,UACAC,EAnBwB,EAmBxBA,UACA3D,EApBwB,EAoBxBA,MACA4D,EArBwB,EAqBxBA,MACAC,EAtBwB,EAsBxBA,WAGF,GAAIV,EAAQnF,QAAS,OAAO,cAAC,EAAD,IAQ5B,OACE,eAAC,WAAD,WACE,sBAAK4C,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKU,IAAKD,EAAYE,IAAI,SAASX,UAAU,YAAYY,MAAO,CAAEsC,MAAO,aAE3E,gCACE,6BAAKvB,IACL,8BAAG,4CAAH,IAA4BqB,KAC5B,8BAAG,+CAAH,IAA+BJ,KAC/B,8BAAG,gDAAH,IAAgC,IAAIO,KAAKF,GAAYG,wBACrD,8BAAIN,EAAJ,IAAe,kDACf,8BAAG,gDAAH,IAAgCC,KAC/B3D,GACC,eAAC,WAAD,WACE,mDADF,IACkCA,WAKvCyD,GACC,qBAAK7C,UAAU,cAAf,SACE,4BAAI6C,MAGR,gCACE,uBAAO5F,KAAK,OAAO0E,KAAK,OAAOC,YAAY,iCAAiCC,SAhCjE,SAAAC,GACfW,EAAgBF,EAAQnE,aAAaiF,QAAO,SAAAlE,GAC1C,OAAOA,EAAKwC,KAAK2B,cAAcC,SAASzB,EAAEE,OAAOrC,MAAM2D,sBAgCnDd,GAAgBA,EAAatD,KAAI,SAAAsE,GAC/B,OACE,oBAAGC,IAAI,aAAazB,OAAO,SAAS0B,KAAMF,EAAKG,SAAU3D,UAAU,YAAnE,UACE,mBAAGA,UAAU,OAAb,SAAqBwD,EAAK7B,OAC1B,sBAAK3B,UAAU,aAAf,UACE,8BAAIwD,EAAKI,MAAT,YACA,8BAAIJ,EAAKK,iBAAT,iBAJgFL,EAAKpC,cCtCxF0C,MAnBf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,sBAAK9D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,IAAIC,UAAW7B,IACjC,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,eAAeC,UAAW5B,IAC5C,cAAC,IAAD,CAAO4B,UAAW/D,iBCRjBgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31ca4583.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst gitContext = createContext();\r\n\r\nexport default gitContext;","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const SET_USER = 'SET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOSITORIES = 'GET_REPOSITORIES';\r\nexport const SET_LOADING = 'SET_LOADING';","import { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_REPOSITORIES, GET_USER, SET_USER } from './gitActionTypes'\r\n\r\nconst gitReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false\r\n      }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: []\r\n      }\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      }\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      }\r\n    case GET_REPOSITORIES:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default gitReducer;","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport gitContext from './gitContext'\r\nimport gitReducer from './gitReducer'\r\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_REPOSITORIES, GET_USER, SET_USER } from './gitActionTypes'\r\n\r\nconst gitAPI = axios.create({\r\n  baseURL: process.env.REACT_APP_GITHUB_API_URL,\r\n})\r\nconst gitToken = process.env.REACT_APP_GITHUB_TOKEN;\r\nif (gitToken) {\r\n  gitAPI.defaults.headers.common.Authorization = `token ${gitToken}`\r\n}\r\n\r\nconst GitState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repositories: [],\r\n    loading: false\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(gitReducer, initialState);\r\n\r\n  // Search User\r\n  const searchUsers = async text => {\r\n    if (!text || text.trim() === '') {\r\n      userClear();\r\n    }\r\n    else {\r\n      setLoading();\r\n      const res = await gitAPI.get(\r\n        `/search/users?q=${text}`\r\n      );\r\n      if (res.data && res.data.items) {\r\n        await Promise.all(\r\n          res.data.items.map(async (item) => {\r\n            const { data } = await gitAPI.get(\r\n              `/users/${item.login}/repos`\r\n            );\r\n            item.repoCount = data.length\r\n            return item\r\n          })\r\n        );\r\n        dispatch({\r\n          type: SEARCH_USERS,\r\n          payload: res.data.items\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // Get User\r\n  const getUser = async userName => {\r\n    setLoading();\r\n    const res = await gitAPI.get(\r\n      `/users/${userName}`\r\n    );\r\n    dispatch({ type: GET_USER, payload: res.data });\r\n  };\r\n\r\n  // Set User\r\n  const setUser = obj => {\r\n    dispatch({ type: SET_USER, payload: obj });\r\n  };\r\n\r\n  // Get Repos\r\n  const getRepositories = async userName => {\r\n    setLoading();\r\n    const res = await gitAPI.get(\r\n      `/users/${userName}/repos?sort=created:asc`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOSITORIES,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n\r\n  // Clear Users\r\n  const userClear = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  // Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING })\r\n\r\n  return <gitContext.Provider\r\n    value={\r\n      {\r\n        users: state.users,\r\n        user: state.user,\r\n        repositories: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        userClear,\r\n        getUser,\r\n        setUser,\r\n        getRepositories\r\n      }\r\n    }\r\n  >\r\n    {props.children}\r\n  </gitContext.Provider>\r\n}\r\n\r\n\r\nexport default GitState;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar bg-primary\">\r\n      <Link to=\"/\">\r\n        <h2>GitHub Searcher</h2>\r\n      </Link>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React, { Fragment } from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>404 Not Found</h1>\r\n      <p className=\"lead\">The page you are looking for doesn't exist!  :(</p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserItem = ({ user: { login, avatar_url, repoCount } }) => {\r\n  return (\r\n    <Link to={`user/${login}`} className=\"card text-center flex\">\r\n      <img\r\n        src={avatar_url}\r\n        alt=\"User Avater\"\r\n        className=\"round-img\"\r\n      />\r\n      <h3 style={userNameStyle}>{login}</h3>\r\n      <span style={userRepoCountStyle}>Repo: {repoCount}</span>\r\n    </Link>\r\n  )\r\n}\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n}\r\n\r\nconst userNameStyle = {\r\n  paddingTop: '6px',\r\n  paddingLeft: '20px'\r\n}\r\nconst userRepoCountStyle = {\r\n  paddingTop: '6px',\r\n  paddingLeft: '20px',\r\n  marginLeft: 'auto'\r\n}\r\nexport default UserItem","export default __webpack_public_path__ + \"static/media/spinner.a6f05fbe.gif\";","import React, { Fragment } from 'react'\r\nimport spinner from '../assets/images/spinner.gif'\r\n\r\nconst Spinner = () =>\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            alt=\"Loading...\"\r\n            className=\"spinner\"\r\n        />\r\n    </Fragment>\r\n\r\nexport default Spinner\r\n","import React, { useContext } from 'react'\r\nimport UserItem from './UserItem'\r\nimport Spinner from '../Spinner'\r\nimport gitContext from '../../context/gitContext'\r\n\r\nconst UserList = () => {\r\n\r\n  const gc = useContext(gitContext);\r\n\r\n  const { loading, users } = gc;\r\n\r\n  if (loading) {\r\n    return <Spinner />\r\n  }\r\n  else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {\r\n          users.map(user => (\r\n            <UserItem key={user.id} user={user} />\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst userStyle = {\r\n  display: 'grid'\r\n}\r\n\r\nexport default UserList\r\n\r\n","import React, { useState, useContext } from 'react'\r\nimport gitContext from '../context/gitContext'\r\n\r\nconst UserSearch = () => {\r\n\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  const gc = useContext(gitContext);\r\n\r\n  const onChange = e => {\r\n    const key = e.target.value;\r\n    setSearchKey(key);\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      setTimer(null);\r\n    }\r\n    setTimer(\r\n      setTimeout(() => {\r\n        gc.searchUsers(key);\r\n      }, 600)\r\n    );\r\n  }\r\n\r\n  const clearKey = () => {\r\n    setSearchKey('');\r\n    gc.userClear();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" name=\"text\" placeholder=\"Search for Users\" value={searchKey} onChange={onChange} />\r\n      {gc.users.length > 0 && <button className=\"btn btn-warnning btn-block\" onClick={clearKey}>Clear</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserSearch\r\n","import React, { Fragment } from 'react';\r\nimport UserList from '../components/Users/UserList'\r\nimport UserSearch from '../components/UserSearch'\r\n\r\nconst Home = () =>\r\n  <Fragment>\r\n    <UserSearch />\r\n    <UserList />\r\n  </Fragment>\r\n\r\nexport default Home;\r\n","import React, { useEffect, Fragment, useContext, useState } from 'react'\r\nimport Spinner from '../components/Spinner'\r\nimport gitContext from '../context/gitContext'\r\n\r\nconst User = ({ match }) => {\r\n  const context = useContext(gitContext)\r\n  const [displayRepos, setDisplayRepos] = useState([])\r\n\r\n  useEffect(() => {\r\n    context.getUser(match.params.login);\r\n    context.getRepositories(match.params.login);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDisplayRepos(context.repositories);\r\n  }, [context.repositories])\r\n\r\n  const {\r\n    name,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    followers,\r\n    following,\r\n    login,\r\n    email,\r\n    created_at,\r\n  } = context.user;\r\n\r\n  if (context.loading) return <Spinner />;\r\n\r\n  const onChange = e => {\r\n    setDisplayRepos(context.repositories.filter(item => {\r\n      return item.name.toLowerCase().includes(e.target.value.toLowerCase())\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"card grid-2\">\r\n        <div className=\"all-center\">\r\n          <img src={avatar_url} alt=\"avatar\" className=\"round-img\" style={{ width: '150px' }} />\r\n        </div>\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <p><strong>Email:</strong> {email}</p>\r\n          <p><strong>Location:</strong> {location}</p>\r\n          <p><strong>Join Date:</strong> {new Date(created_at).toLocaleDateString()}</p>\r\n          <p>{followers} <strong>Followers</strong></p>\r\n          <p><strong>Following:</strong> {following}</p>\r\n          {login && (\r\n            <Fragment>\r\n              <strong>Github name: </strong> {login}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {bio && (\r\n        <div className=\"text-center\">\r\n          <p>{bio}</p>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <input type=\"text\" name=\"text\" placeholder=\"Search for User's Repositories\" onChange={onChange} />\r\n        {\r\n          displayRepos && displayRepos.map(repo => {\r\n            return (\r\n              <a rel=\"noreferrer\" target=\"_blank\" href={repo.html_url} className=\"card flex\" key={repo.id}>\r\n                <p className=\"pt-1\">{repo.name}</p>\r\n                <div className=\"flex-right\">\r\n                  <p>{repo.forks} Forks</p>\r\n                  <p>{repo.stargazers_count} Stars</p>\r\n                </div>\r\n              </a>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport GitState from './context/gitState';\n\nimport Navbar from './components/Navbar';\nimport NotFound from './pages/NotFound';\nimport Home from './pages/Home';\nimport User from './pages/User';\n\nfunction App() {\n  return (\n    <GitState>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/user/:login\" component={User} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GitState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}